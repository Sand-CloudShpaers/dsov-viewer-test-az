/**
 * Omgevingsdocumenten-Presenteren
 * De Omgevingsdocumenten Presenteren API ontsluit beschikbaar gestelde omgevingsdocumenten op zo\'n manier dat deze eenvoudig visueel te verbeelden zijn. Op de Ontwikkel, Test, Acceptatie en Pre-productieomgeving worden ook omgevingsdocumenten toegevoegd en verwijderd door beheerders voor testdoeleinden binnen en buiten de voorziening.<br/> <br/> De Omgevingsdocumenten Presenteren API volgt de standaarden zoals beschreven in de DSO API-strategie versie 1.1. Zo is het standaard mediatype HAL (`application/hal+json`). Dit is een mediatype voor het weergeven van resources en hun relaties via hyperlinks.
 *
 * The version of the OpenAPI document: 7.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OntwerpLocatie } from './ontwerpLocatie';
import { Locatie } from './locatie';
import { OntwerpRegistratiegegevens } from './ontwerpRegistratiegegevens';
import { SelfLinks } from './selfLinks';


/**
 * Één van de kwantitatieve of kwalitatieve waarden van een norm. De normwaarde geeft aan wat de specifieke kwantitatieve of kwalitatieve eisen zijn, inclusief de toewijzing ervan aan de specifieke locatie(s) waar de normwaarde voor geldt. 
 */
export interface OntwerpNormwaarde { 
    identificatie: string;
    /**
     * De toewijzing van een normerende waarde aan een locatie in de vorm van een beschrijving in woorden. De beschrijving geeft tekstueel de betekenis weer van de normwaarde.
     */
    kwalitatieveWaarde?: string;
    /**
     * De numerieke waarde van een norm. 
     */
    kwantitatieveWaarde?: number;
    waardeInRegeltekst?: string;
    /**
     * De specifieke locatie(s) waarvoor een specifieke normwaarde geldt.
     */
    geldtVoor?: Array<OntwerpLocatie>;
    /**
     * De specifieke locatie(s) waarvoor een specifieke normwaarde geldt.
     */
    geldtVoorVastgesteld?: Array<Locatie>;
    geregistreerdMet: OntwerpRegistratiegegevens;
    _links: SelfLinks;
}

